---
- hosts: local
  name: System Configuration
  become: true
  tags:
    - system
    - config
  tasks:
    - name: systemd journal max disk usage
      ini_file:
        state: present
        path: /etc/systemd/journald.conf
        mode: 0644
        section: Journal
        option: SystemMaxUse
        value: 50M
        no_extra_spaces: yes
      notify: restart systemd-journald

    - name: grub timeout 2s
      ini_file:
        path: /etc/default/grub
        mode: 0644
        section: ''
        option: GRUB_TIMEOUT
        value: '2'
        no_extra_spaces: yes
      notify: grub-mkconfig

    - name: grub load /etc/default/grub.d/*.cfg
      blockinfile:
        path: /etc/default/grub
        mode: 0644
        block: |
          for INCL in /etc/default/grub.d/*.cfg ; do
              source "${INCL}"
          done
      notify: grub-mkconfig

    - name: grub apparmor enabled
      ini_file:
        path: /etc/default/grub.d/apparmor.cfg
        mode: 0644
        section: ''
        option: GRUB_CMDLINE_LINUX_DEFAULT
        value: '"${GRUB_CMDLINE_LINUX_DEFAULT} apparmor=1 lsm=lockdown,yama,apparmor"'
        no_extra_spaces: yes
      notify: grub-mkconfig

    - name: faillock deny 12 failed logins
      ini_file:
        path: /etc/security/faillock.conf
        mode: 0644
        section: ''
        option: deny
        value: "12"
        no_extra_spaces: no

    - name: sudo with password for wheel group
      ini_file:
        path: /etc/sudoers
        mode: 0440
        section: ''
        option: '%wheel ALL'
        value: '(ALL) ALL'
        no_extra_spaces: yes
        backup: yes

    - name: service pacman-auto-update.timer frequency
      blockinfile:
        path: /etc/systemd/system/pacman-auto-update.timer.d/frequency-24-hours.conf
        block: |
          [Timer]
          OnBootSec=
          OnBootSec=5min
          OnUnitActiveSec=24hour
        create: yes
        group: root
        mode: 0644
        owner: root
      notify: reload systemd daemon

    - name: udev rules for U2F security keys like YubiKey
      copy:
        src: "69-u2f-security-key.local.rules"
        dest: "/etc/udev/rules.d/69-u2f-security-key.local.rules"
        mode: 0644
        owner: root
        group: root
      notify: reload udev

    - name: pacman repositories
      ini_file:
        path: /etc/pacman.conf
        mode: 0644
        section: "{{ item.repository }}"
        option: "Server"
        value: "{{ item.url }}"
        no_extra_spaces: no
      loop:
        - { repository: 'archzfs-kernels', url: 'https://end.re/$repo/' }
        - { repository: "archzfs", url: "https://archzfs.com/$repo/x86_64/" }
        - { repository: "quatauta", url: "file:///home/daniel/Documents/workspace/aur-$repo/repo" }

    - name: TLP power savings
      ini_file:
        path: /etc/tlp.d/90-local.conf
        mode: 0644
        section: ''
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        no_extra_spaces: yes
      loop:
        - { option: "RUNTIME_PM_ON_AC", value: "auto" }
        - { option: "SATA_LINKPWR_ON_AC", value: '"med_power_with_dipm max_performance"' }
        - { option: "SATA_LINKPWR_ON_BAT", value: '"med_power_with_dipm max_performance"' }
        - { option: "SCHED_POWERSAVE_ON_AC", value: "1" }
        - { option: "SOUND_POWER_SAVE_ON_AC", value: "1" }
        - { option: "USB_AUTOSUSPEND_DISABLE_ON_SHUTDOWN", value: "1" }

    - name: services
      ignore_errors: yes
      service:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
        enabled: "{{ item.enabled }}"
      loop:
        - { state: started, enabled: yes, name: "apparmor" }
        - { state: started, enabled: yes, name: "fstrim.timer" }
        - { state: started, enabled: yes, name: "gpm" }
        - { state: started, enabled: yes, name: "NetworkManager" }
        - { state: started, enabled: yes, name: "paccache.timer" }
        - { state: started, enabled: yes, name: "pacman-auto-update.timer" }
        - { state: started, enabled: yes, name: "reflector.timer" }
        - { state: started, enabled: yes, name: "smartd" }
        - { state: started, enabled: yes, name: "sshd" }
        - { state: started, enabled: yes, name: "systemd-resolved" }
        - { state: started, enabled: yes, name: "systemd-timesyncd" }
        - { state: started, enabled: yes, name: "tlp" }
        - { state: started, enabled: yes, name: "updatedb.timer" }
        - { state: stopped, enabled: no, name: "atop" }
        - { state: stopped, enabled: no, name: "atopacct" }

    - name: tmpfile for minimum hibernate image size
      blockinfile:
        path: /etc/tmpfiles.d/hibernate-image-size-minimum.conf
        block: |
          # Path                  Mode UID GID Age Argument
          w /sys/power/image_size -    -   -   -   0
        create: yes
        group: root
        mode: 0644
        owner: root

    - name: mkinitcpio hooks
      ini_file:
        path: /etc/mkinitcpio.conf
        mode: 0644
        section: ""
        option: "HOOKS"
        value: "(base udev autodetect modconf block keyboard zfs filesystems resume fsck)"
        no_extra_spaces: yes
      notify: mkinitcpio

    - name: shell aliases
      blockinfile:
        path: /etc/profile.d/alias.local.sh
        block: |
          [ -x "$(command -v dircolors)" ] && eval "$(dircolors)"
          export LS_OPTIONS='--color=auto -hpv'
          alias ls='ls ${LS_OPTIONS}'
          alias ll='ls -l'
          alias la='ls -A'
          alias lla='ls -lA'
          alias cp='cp -i'
          alias mv='mv -i'
          alias rm='rm -i'
          alias less='less -MNS'
          alias o='less'
          alias pse='ps -eH u'
          alias pses='ps -eH S'
          alias psu='ps -u"${EUID}" -H u'
          alias psus='ps -u"${EUID}" -H S'
          alias   ...='cd ../..'
          alias  ....='cd ../../..'
          alias .....='cd ../../../..'
        create: yes
        group: root
        mode: 0644
        owner: root

    - name: gdm config
      become_user: gdm
      ignore_errors: true
      community.general.dconf:
        key: "{{ item.key }}"
        value: "{{ item.value | string }}"
        state: "{{ item.state }}"
      loop:
        - { key: "/org/gnome/settings-daemon/plugins/color/night-light-enabled", value: "true", state: present }
        - { key: "/org/gnome/settings-daemon/plugins/power/sleep-inactive-ac-timeout", value: 60, state: present }
        - { key: "/org/gnome/settings-daemon/plugins/power/sleep-inactive-ac-timeout", value: 60, state: present }

    - name: reflector settings for pacman mirrorlist
      blockinfile:
        path: /etc/xdg/reflector/reflector.conf
        block: "--country Luxembourg,Germany,Belgium,France"
        create: yes
        group: root
        mode: 0644
        owner: root

    - name: ruby gems without documentation
      lineinfile:
        path: /etc/gemrc
        mode: 0644
        line: "gem: --user-install --no-document"
        regexp: "^gem:"
        state: present

    - name: docker system prune script
      blockinfile:
        path: /usr/local/bin/docker-system-prune.sh
        block: |
          #!/bin/sh

          /usr/bin/systemctl status docker 1>/dev/null 2>&1 || STOP_DOCKER=1
          /usr/bin/systemctl start docker
          /usr/bin/docker system prune -f

          [ "${STOP_DOCKER}" == "1" ] && /usr/bin/systemctl stop docker
        create: yes
        group: root
        mode: 0755
        owner: root

    - name: docker system prune service
      blockinfile:
        path: /etc/systemd/system/docker-system-prune.service
        block: |
          [Unit]
          Description=Docker System Prune cleanup

          [Service]
          Type=oneshot
          ExecStart=/usr/local/bin/docker-system-prune.sh
        create: yes
        group: root
        mode: 0644
        owner: root

    - name: docker system prune timer
      blockinfile:
        path: /etc/systemd/system/docker-system-prune.timer
        block: |
          [Unit]
          Description=Docker System Prune cleanup timer

          [Timer]
          OnCalendar=Weekly
          Persistent=true

          [Install]
          WantedBy=timers.target
        create: yes
        group: root
        mode: 0644
        owner: root

    - name: docker system prune timer enabled
      service:
        name: docker-system-prune.timer
        state: started
        enabled: yes

  handlers:
    - name: restart systemd-journald
      service:
        name: systemd-journald
        state: restarted

    - name: grub-mkconfig
      command: grub-mkconfig -o /boot/grub/grub.cfg

    - name: reload udev
      command: udevadm control --reload

    - name: mkinitcpio
      command: mkinitcpio -P

    - name: reload systemd daemon
      systemd:
        daemon-reload: yes
